{% extends 'layout.html.twig' %}

{% block html_title %}Software Craftsmanship - Site of Jeroen De Dauw{% endblock %}

{% block body %}
    <div class="row mb-3">
        <div class="col-lg-12">
            <h1>Software Craftsmanship</h1>

            <p>
                I like getting things done. Most projects in the software industry crawl to a halt after initial
                development because most developers simply do not know the basics of software design and thus create big messes.
                Hence my passion for and practice of <a href="http://manifesto.softwarecraftsmanship.org/">Software Craftsmanship</a>.
                With the right knowledge you can get more things done for a lower cost, which is a win for everyone involved.
            </p>

            Subscribe to my low-traffic mailing list because you will receive news and exclusive discounts on my new book and online course:
            <div id="mc_embed_signup" style="margin-top: 0.5em">
                <form action="https://wtf.us19.list-manage.com/subscribe/post?u=5e9453f7bede9f5b0220b2c42&amp;id=9df25d9e9d" method="post"
                      id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate
                        style="padding: 0;">
                    <div id="mc_embed_signup_scroll">
                        <div>
                            <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL">
                            <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" style="width: 100px; display: inline; padding: 0">
                        </div>
                        <div id="mce-responses" class="clear">
                            <div class="response" id="mce-error-response" style="display:none"></div>
                            <div class="response" id="mce-success-response" style="display:none"></div>
                        </div>
                        <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_5e9453f7bede9f5b0220b2c42_9df25d9e9d" tabindex="-1" value=""></div>

                    </div>
                </form>
            </div>
            <script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script>
            <script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='ADDRESS';ftypes[3]='address';fnames[4]='PHONE';ftypes[4]='phone';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <h3>Blog posts</h3>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <strong>Software Craftsmanship</strong>
            <ul class="list-unstyled">
                {% for post in craftPosts|slice(0, 10) %}
                    <li><a href="{{ post.link|e }}">{{ post.title|raw }}</a></li>
                {% endfor %}
            </ul>
            View <a href="https://www.entropywins.wtf/blog/tag/software-craftsmanship/">all Software Craftsmanship blog posts</a>
        </div>
        <div class="col-md-6">
            <strong>Clean Code</strong>
            <ul class="list-unstyled">
                {% for post in cleanPosts|slice(0, 10) %}
                    <li><a href="{{ post.link|e }}">{{ post.title|raw }}</a></li>
                {% endfor %}
            </ul>
            View <a href="https://www.entropywins.wtf/blog/tag/clean-code/">all Clean Code blog posts</a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <h3>Presentations</h3>

            <p>Note that these slides are not designed for standalone usage.</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <strong>Real world implementation of The Clean Architecture</strong>
            <ul>
                <li>Read <a href="https://github.com/JeroenDeDauw/fun-architecture/blob/master/README.md">the abstract</a></li>
                <li>View <a href="{{ app.request.basepath }}/slides/fun-architecture">the slides</a></li>
                <li>Read <a href="https://www.entropywins.wtf/blog/2016/11/24/implementing-the-clean-architecture/">the blog post</a></li>
            </ul>
        </div>
        <div class="col-md-6">
            <strong>Component design</strong>: how to create well designed components
            <ul>
                <li>Read <a href="https://github.com/JeroenDeDauw/slides/blob/master/craftmanship/components/README.md">the abstract</a></li>
                <li>View <a href="http://bit.ly/component-design">the slides</a></li>
                <li>Read <a href="http://www.entropywins.wtf/blog/2014/07/12/component-design/">the blog post</a></li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <strong>The S in STUPID</strong>: why static code is generally harmful and should be rarely used
            <ul>
                <li>Read <a href="https://github.com/JeroenDeDauw/slides/blob/master/craftmanship/static/README.md">the abstract</a></li>
                <li>View <a href="http://bit.ly/static-code">the slides</a></li>
                <li>Read <a href="http://www.entropywins.wtf/blog/2013/11/15/presentation-the-s-in-stupid/">the blog post</a></li>
            </ul>
        </div>
        <div class="col-md-6">
            <strong>The Liskov Substitution Principle</strong>: how to avoid common inheritance related pitfalls
            <ul>
                <li>Read <a href="https://github.com/JeroenDeDauw/slides/blob/master/craftmanship/LSP/README.md">the abstract</a></li>
                <li>View <a href="http://bit.ly/solid-lsp">the slides</a></li>
                <li>Read <a href="https://www.entropywins.wtf/blog/2016/01/24/the-liskov-substitution-principle/">the blog post</a></li>
            </ul>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-6">
            <strong>Clean Functions</strong>: how to create truly clean and well designed functions

            <ul>
                <li>Read <a href="https://github.com/JeroenDeDauw/slides/blob/master/craftmanship/functions/README.md">the abstract</a></li>
                <li>View <a href="http://bit.ly/clean-functions">the slides</a></li>
                <li>Read <a href="http://www.entropywins.wtf/blog/2013/09/08/clean-functions/">the blog post</a></li>
            </ul>
        </div>
        <div class="col-md-6">
            <strong>Writing easy to maintain code</strong>: talk from the 2015 EnthusiastiCon
            <ul>
                <li>View <a href="http://bit.ly/econ-cleancode">the slides</a></li>
                <li>View <a href="https://www.youtube.com/watch?v=vyazVasLpds">the recording</a></li>
            </ul>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-lg-12">
            {% markdown %}
### Recommended reading: Software Craftsmanship

* [The Clean Coder: A Code of Conduct for Professional Programmers](https://www.goodreads.com/book/show/10284614-the-clean-coder), Robert C. Martin, 2011
* [The Software Craftsman: Professionalism, Pragmatism, Pride](https://www.goodreads.com/book/show/23215733-the-software-craftsman), Sandro Mancuso, 2014
* [Apprenticeship Patterns: Guidance for the Aspiring Software Craftsman](https://www.goodreads.com/book/show/5608045-apprenticeship-patterns),  Dave Hoover and Adewale Oshineye , 2009
<br />

### Recommended reading: Technical topics

* [Clean Code: A Handbook of Agile Software Craftsmanship](https://www.goodreads.com/book/show/3735293-clean-code), Robert C. Martin, 2007
* [Refactoring: Improving the Design of Existing Code](https://www.goodreads.com/book/show/44936.Refactoring) Martin Fowler, Kent Beck and Don Robert, 1999
* [Working Effectively with Legacy Code](https://www.goodreads.com/book/show/44919.Working_Effectively_with_Legacy_Code), Michael Feathers, 2004
* [Domain-Driven Design Distilled](https://www.goodreads.com/book/show/28602719-domain-driven-design-distilled), Vaughn Vernon, 2016
* [Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation](https://www.goodreads.com/book/show/8686650-continuous-delivery), David Farley and Jez Humble, 2010
* [The SOLID principles](https://en.wikipedia.org/wiki/SOLID), Wikipedia article
* [Test-driven development](https://en.wikipedia.org/wiki/Test-driven_development), Wikipedia article
<br />

### Podcast with me on Software Craftsmanship:

* [Software Craftsmanship: Values, Practices and Community](https://sourcecode.berlin/2015/04/17/software-craftsmanship/), [sourcecode.berlin](https://sourcecode.berlin)
            {% endmarkdown %}
            <br />
        </div>
    </div>


{% endblock %}


